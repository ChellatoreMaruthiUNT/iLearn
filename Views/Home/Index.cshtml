@{
    ViewData["Title"] = "Home Page";
}
@model HomeViewModel
<!DOCTYPE html>
<html>
<body>
    <div class="filter-container">
        <h4>Filters</h4>
        <form id="filterForm" asp-action="Filter" asp-controller="Home" method="get">
            <div class="filter-row">
                <div class="filter-group">
                    <label for="category">Instructor:</label>
                    <select id="instructorId" name="instructorId">
                        <option value="" selected>Select</option>
                        @foreach (var option in Model.Instructors)
                        {
                            <option value="@option.InstructorId">@option.InstructorFirstName</option>
                        }
                    </select>
                </div>
                <div class="filter-group">
                    <label for="Assessment">Assessment:</label>
                    <select id="hasAssessment" name="hasAssessment">
                        <option value="" selected>Select</option>
                        @foreach (var option in Model.AssessmentTypes)
                        {
                            <option value="@option.Item1">@option.Item2</option>
                        }
                    </select>
                </div>
                <div class="filter-group">
                    <label for="Certification">Certification:</label>
                    <select id="hasCertification" name="hasCertification">
                        <option value="" selected>Select</option>
                        @foreach (var option in Model.CertificationTypes)
                        {
                            <option value="@option.Item1">@option.Item2</option>
                        }
                    </select>
                </div>
                <div class="filter-group">
                    <button id="filter-button" class="btn btn-primary" type="button">Filter</button>
                </div>
            </div>
        </form>
    </div>
    <div id="cardsHolderDiv" class="cardsHolderDiv">
        @Html.Partial("_Card", Model.Cards)
    </div>

</body>
</html>
<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        var filterButton = document.getElementById("filter-button");
        var filterForm = document.getElementById("filterForm");
        var cardsHolderDiv = document.getElementById("cardsHolderDiv");

        filterButton.addEventListener("click", function () {
            var formData = new FormData(filterForm);
            fetch(filterForm.action + "?" + new URLSearchParams(formData), {
                method: "GET",
                headers: {
                    "X-Requested-With": "XMLHttpRequest"
                }
            })
                .then(function (response) {
                    return response.text();
                })
                .then(function (data) {
                    cardsHolderDiv.innerHTML = data;
                })
                .catch(function (error) {
                    console.error("Error:", error);
                });
        });
    });
</script>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
    }



    /* Styles for Filters */
    .filter-container {
        background-color: #04102C;
        padding: 10px;
        border-radius: 5px;
        margin: 10px;
        text-align: center;
        position: sticky;
        top: 0;
        z-index: 1;
        color: white;
    }

    .cardsHolderDiv {
        overflow-y: auto; /* Allow cards to scroll */
        max-height: fit-content; /* Set a maximum height for the scrollable area */
        padding: 10px;
        /* Add other styles as needed */
    }

    .filter-row {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .filter-group {
        display: flex;
        align-items: center;
        margin-right: 20px;
    }

    label {
        margin-right: 10px;
        font-weight: bold;
    }

    select {
        padding: 6px;
        background-color: #f5f5f5;
        color: #333;
        border: 1px solid #ddd;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn {
        padding: 8px 16px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    
    .bodyCards {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        padding: 20px;
    }

    .card {
        width: 100%;
        background-color: #fff;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        /* text-align: center; */
    }

        .card img {
            max-width: 100%;
            height: auto;
            object-fit: cover;
        }

    .card-content {
        padding: 20px;
        background-color: #f9f9f9;
        color: #04102C;
        flex: 1;
        display:flex;
        flex-direction: column;
        justify-content: space-between
    }

        .card-content h3 {
            font-size: 1.5rem;
            margin: 0;
        }

        .card-content p {
            margin: 10px 0;
        }

    .no-items-div {
        justify-content: center;
        font-size: 25px;
        margin-top: 100px;
    }
</style>
